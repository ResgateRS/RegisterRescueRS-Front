# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: |
          npm run build
          echo "Listing contents of ./dist to confirm creation:"
          ls -la ./dist

      - name: Archive artifact
        if: success()
        run: |
          echo ::group::Archive artifact
          tar --dereference --hard-dereference --directory "./dist" -cvf "$RUNNER_TEMP/artifact.tar" --exclude=.git --exclude=.github .
          echo ::endgroup::

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"
          name: "github-pages"
          retention-days: 1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Set environment variables
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_NEXT_API_URL=${{ secrets.NEXT_PUBLIC_NEXT_API_URL }}" >> $GITHUB_ENV

      - name: Display Deployment URL
        run: echo "Deployed to ${{ steps.deployment.outputs.page_url }}"
